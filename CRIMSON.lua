local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v33()local v43=v9(v27,v30,v30);v30=v30 + 1 ;return v43;end v34=nil;function v34()local v44=0;local v45;local v46;while true do if (v44==1) then return (v46 * 256) + v45 ;end if (v44==0) then v45,v46=v9(v27,v30,v30 + (4 -2) );v30=v30 + 2 ;v44=1;end end end v29=3;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==7) then function v41(v47,v48,v49)local v50=0;local v51;local v52;local v53;while true do if (1==v50) then v53=v47[3];return function(...)local v91=v51;local v92=v52;local v93=v53;local v94=v39;local v95=4 -3 ;local v96= -1;local v97={};local v98={...};local v99=v20("#",...) -1 ;local v100={};local v101={};for v116=0,v99 do if (v116>=v93) then v97[v116-v93 ]=v98[v116 + 1 + 0 ];else v101[v116]=v98[v116 + 1 ];end end local v102=(v99-v93) + 1 ;local v103;local v104;while true do v103=v91[v95];v104=v103[1];if (v104<=59) then if (v104<=29) then if (v104<=14) then if (v104<=6) then if (v104<=2) then if (v104<=0) then v48[v103[3]]=v101[v103[2]];elseif (v104>1) then v49[v103[3]]=v101[v103[2]];else local v166=0;local v167;while true do if (v166==0) then v167=v103[2];do return v101[v167](v21(v101,v167 + 1 ,v96));end break;end end end elseif (v104<=4) then if (v104==3) then local v168=v103[2];do return v21(v101,v168,v96);end else v101[v103[1 + 1 ]]=v101[v103[3]]%v101[v103[4]] ;end elseif (v104>5) then v101[v103[2]]=v49[v103[3]];else v101[v103[2]]=v101[v103[3]] + v103[4] ;end elseif (v104<=10) then if (v104<=8) then if (v104>7) then v101[v103[959 -(892 + 65) ]]=v101[v103[3]] + v103[4] ;else v101[v103[2]]=v103[3]~=0 ;end elseif (v104==9) then v101[v103[4 -2 ]]={};else v101[v103[2]]();end elseif (v104<=12) then if (v104>11) then local v176=v103[2];local v177=v101[v176];local v178=v101[v176 + 2 ];if (v178>0) then if (v177>v101[v176 + 1 ]) then v95=v103[3];else v101[v176 + (5 -2) ]=v177;end elseif (v177<v101[v176 + 1 ]) then v95=v103[3];else v101[v176 + 3 ]=v177;end else local v179=0;local v180;local v181;while true do if (v179==1) then v101[v180 + 1 ]=v181;v101[v180]=v181[v103[4]];break;end if (v179==0) then v180=v103[2];v181=v101[v103[3]];v179=1;end end end elseif (v104>13) then local v182=0;local v183;local v184;local v185;local v186;while true do if (v182==1) then v96=(v185 + v183) -1 ;v186=0;v182=2;end if (v182==2) then for v472=v183,v96 do local v473=0;while true do if (v473==0) then v186=v186 + 1 ;v101[v472]=v184[v186];break;end end end break;end if (v182==0) then v183=v103[3 -1 ];v184,v185=v94(v101[v183](v101[v183 + 1 ]));v182=1;end end else v101[v103[2]]();end elseif (v104<=21) then if (v104<=17) then if (v104<=15) then if (v101[v103[2]]~=v101[v103[354 -(87 + 263) ]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>16) then v101[v103[2]]=v48[v103[3]];elseif v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=19) then if (v104==18) then v101[v103[182 -(67 + 113) ]]=v101[v103[3 + 0 ]];else v101[v103[2]][v103[3]]=v101[v103[4]];end elseif (v104>20) then v101[v103[4 -2 ]]=v101[v103[3]] -v101[v103[4]] ;else v101[v103[2 + 0 ]]=v103[3] + v101[v103[4]] ;end elseif (v104<=(99 -74)) then if (v104<=23) then if (v104==22) then local v196=0;local v197;local v198;local v199;local v200;while true do if (v196==0) then v197=v103[2];v198,v199=v94(v101[v197](v21(v101,v197 + 1 ,v103[3])));v196=1;end if (v196==2) then for v474=v197,v96 do v200=v200 + 1 ;v101[v474]=v198[v200];end break;end if (v196==1) then v96=(v199 + v197) -1 ;v200=0;v196=2;end end elseif  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>24) then local v201=0;local v202;local v203;while true do if (v201==0) then v202=v103[3];v203=v101[v202];v201=1;end if (v201==1) then for v477=v202 + 1 ,v103[4] do v203=v203   .. v101[v477] ;end v101[v103[2]]=v203;break;end end elseif  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=27) then if (v104>(978 -(802 + 150))) then local v204=0;local v205;local v206;while true do if (1==v204) then v101[v205 + 1 ]=v206;v101[v205]=v206[v103[6 -2 ]];break;end if (v204==0) then v205=v103[2];v206=v101[v103[7 -4 ]];v204=1;end end else v101[v103[2]][v101[v103[3]]]=v101[v103[4]];end elseif (v104==28) then v101[v103[2]][v103[3]]=v103[4];else do return v101[v103[2]]();end end elseif (v104<=44) then if (v104<=36) then if (v104<=(24 + 8)) then if (v104<=30) then local v143=v103[2];local v144=v103[4];local v145=v143 + (999 -(915 + 82)) ;local v146={v101[v143](v101[v143 + (2 -1) ],v101[v145])};for v160=1,v144 do v101[v145 + v160 ]=v146[v160];end local v147=v146[1 + 0 ];if v147 then local v211=0;while true do if (0==v211) then v101[v145]=v147;v95=v103[3];break;end end else v95=v95 + 1 ;end elseif (v104==31) then local v212=0;local v213;while true do if (0==v212) then v213=v103[2];do return v21(v101,v213,v213 + v103[3] );end break;end end else local v214=0;local v215;while true do if (v214==0) then v215=v103[2];do return v101[v215](v21(v101,v215 + 1 ,v103[3]));end break;end end end elseif (v104<=34) then if (v104>(42 -9)) then v101[v103[2]]=v101[v103[3]][v103[4]];else v101[v103[2]]=v101[v103[3]] + v101[v103[4]] ;end elseif (v104==35) then local v219=0;local v220;while true do if (v219==0) then v220=v103[2];v101[v220]=v101[v220]();break;end end else v101[v103[2]]=v101[v103[3]] + v101[v103[4]] ;end elseif (v104<=(1227 -(1069 + 118))) then if (v104<=38) then if (v104>37) then local v222=0;local v223;local v224;local v225;while true do if (v222==1) then v225=0;for v478=v223,v103[4] do local v479=0;while true do if (v479==0) then v225=v225 + 1 ;v101[v478]=v224[v225];break;end end end break;end if (0==v222) then v223=v103[2];v224={v101[v223](v21(v101,v223 + (2 -1) ,v96))};v222=1;end end else v101[v103[2]]=v41(v92[v103[3]],nil,v49);end elseif (v104==(84 -45)) then v101[v103[2]]= #v101[v103[3]];else v101[v103[2]]=v103[3]~=0 ;end elseif (v104<=42) then if (v104==41) then local v229=0;local v230;while true do if (v229==0) then v230=v103[2];v101[v230]=v101[v230](v21(v101,v230 + 1 ,v103[3]));break;end end else local v231=0;local v232;local v233;while true do if (v231==1) then for v480=v232 + 1 ,v103[4] do v233=v233   .. v101[v480] ;end v101[v103[2]]=v233;break;end if (v231==0) then v232=v103[3];v233=v101[v232];v231=1;end end end elseif (v104>43) then v101[v103[2]]=v101[v103[3]];else v49[v103[3]]=v101[v103[2]];end elseif (v104<=51) then if (v104<=(9 + 38)) then if (v104<=45) then local v148=0;local v149;local v150;local v151;local v152;while true do if (v148==1) then v96=(v151 + v149) -1 ;v152=0;v148=2;end if (v148==0) then v149=v103[2];v150,v151=v94(v101[v149](v101[v149 + 1 ]));v148=1;end if (v148==2) then for v381=v149,v96 do v152=v152 + 1 ;v101[v381]=v150[v152];end break;end end elseif (v104==46) then local v238=0;local v239;while true do if (v238==0) then v239=v103[2];v101[v239](v21(v101,v239 + 1 ,v103[3]));break;end end elseif (v101[v103[3 -1 ]]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=49) then if (v104>48) then local v240=0;local v241;local v242;local v243;while true do if (0==v240) then v241=v103[2];v242=v101[v241 + 2 ];v240=1;end if (v240==1) then v243=v101[v241] + v242 ;v101[v241]=v243;v240=2;end if (v240==2) then if (v242>0) then if (v243<=v101[v241 + 1 ]) then local v525=0;while true do if (0==v525) then v95=v103[3];v101[v241 + 3 ]=v243;break;end end end elseif (v243>=v101[v241 + 1 ]) then local v526=0;while true do if (v526==0) then v95=v103[3];v101[v241 + 3 ]=v243;break;end end end break;end end else local v244=v103[2];v101[v244](v101[v244 + 1 + 0 ]);end elseif (v104>(841 -(368 + 423))) then local v245=v103[2];v101[v245](v21(v101,v245 + 1 ,v103[9 -6 ]));elseif (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=55) then if (v104<=53) then if (v104==(70 -(10 + 8))) then local v246=0;local v247;while true do if (v246==0) then v247=v103[2];v101[v247](v21(v101,v247 + 1 ,v96));break;end end else v101[v103[2]][v101[v103[3]]]=v101[v103[4]];end elseif (v104>54) then local v250=0;local v251;local v252;while true do if (v250==1) then for v481=v251 + (3 -2) ,v96 do v15(v252,v101[v481]);end break;end if (v250==0) then v251=v103[2];v252=v101[v251];v250=1;end end else local v253=0;local v254;while true do if (0==v253) then v254=v103[444 -(416 + 26) ];v101[v254]=v101[v254](v21(v101,v254 + 1 ,v96));break;end end end elseif (v104<=57) then if (v104==56) then v101[v103[2]]=v101[v103[3]]%v103[4] ;else local v256=0;local v257;local v258;local v259;while true do if (v256==2) then if (v258>0) then if (v259<=v101[v257 + 1 ]) then local v527=0;while true do if (v527==0) then v95=v103[3];v101[v257 + 3 ]=v259;break;end end end elseif (v259>=v101[v257 + 1 ]) then local v528=0;while true do if (0==v528) then v95=v103[3];v101[v257 + 3 ]=v259;break;end end end break;end if (v256==1) then v259=v101[v257] + v258 ;v101[v257]=v259;v256=2;end if (v256==0) then v257=v103[2];v258=v101[v257 + 2 ];v256=1;end end end elseif (v104==58) then do return v101[v103[2]];end else local v260=v92[v103[9 -6 ]];local v261;local v262={};v261=v18({},{[v7("\118\23\242\160\81\76\48","\53\41\72\155\206")]=function(v350,v351)local v352=v262[v351];return v352[1][v352[2]];end,[v7("\12\121\116\81\25\69\72\6\54\94","\98\83\38\26\52\110\44\38")]=function(v353,v354,v355)local v356=0;local v357;while true do if (v356==0) then v357=v262[v354];v357[1][v357[2]]=v355;break;end end end});for v358=1,v103[4] do local v359=0;local v360;while true do if (v359==1) then if (v360[1]==18) then v262[v358-1 ]={v101,v360[3]};else v262[v358-1 ]={v48,v360[3]};end v100[ #v100 + 1 ]=v262;break;end if (v359==0) then v95=v95 + 1 + 0 ;v360=v91[v95];v359=1;end end end v101[v103[2]]=v41(v260,v261,v49);end elseif (v104<=89) then if (v104<=74) then if (v104<=66) then if (v104<=62) then if (v104<=60) then local v153=0;local v154;local v155;while true do if (v153==0) then v154=v103[2];v155=v101[v154];v153=1;end if (1==v153) then for v386=v154 + 1 ,v96 do v15(v155,v101[v386]);end break;end end elseif (v104>61) then if (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3];end else local v264=v103[2];v96=(v264 + v102) -1 ;for v363=v264,v96 do local v364=0;local v365;while true do if (v364==0) then v365=v97[v363-v264 ];v101[v363]=v365;break;end end end end elseif (v104<=64) then if (v104==63) then local v265=v103[2];v101[v265](v21(v101,v265 + 1 ,v96));elseif (v101[v103[3 -1 ]]<v103[4]) then v95=v95 + (439 -(145 + 293)) ;else v95=v103[3];end elseif (v104>65) then v101[v103[2]]=v103[3] + v101[v103[4]] ;else v101[v103[432 -(44 + 386) ]]=v101[v103[3]] -v101[v103[4]] ;end elseif (v104<=70) then if (v104<=68) then if (v104>67) then v101[v103[2]]=v41(v92[v103[3]],nil,v49);else for v366=v103[2],v103[3] do v101[v366]=nil;end end elseif (v104>69) then v101[v103[2]]=v101[v103[3]] * v101[v103[4]] ;else do return;end end elseif (v104<=72) then if (v104>71) then v101[v103[2]]=v101[v103[3]][v101[v103[4]]];else local v272=0;local v273;while true do if (v272==0) then v273=v103[2];do return v101[v273](v21(v101,v273 + 1 ,v96));end break;end end end elseif (v104==73) then v101[v103[1488 -(998 + 488) ]]= #v101[v103[1 + 2 ]];else local v275=0;local v276;while true do if (1==v275) then for v488=v276,v96 do local v489=v97[v488-v276 ];v101[v488]=v489;end break;end if (v275==0) then v276=v103[2];v96=(v276 + v102) -1 ;v275=1;end end end elseif (v104<=81) then if (v104<=77) then if (v104<=(62 + 13)) then v101[v103[2]]=v49[v103[3]];elseif (v104>76) then v95=v103[3];else do return v101[v103[774 -(201 + 571) ]]();end end elseif (v104<=79) then if (v104==78) then v101[v103[2]][v103[3]]=v101[v103[4]];elseif (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==80) then local v280=0;local v281;while true do if (v280==0) then v281=v103[2];do return v21(v101,v281,v96);end break;end end else for v368=v103[2],v103[3] do v101[v368]=nil;end end elseif (v104<=(1223 -(116 + 1022))) then if (v104<=83) then if (v104>82) then local v282=0;local v283;while true do if (v282==0) then v283=v103[2];v101[v283]=v101[v283](v101[v283 + 1 ]);break;end end else local v284=0;local v285;while true do if (v284==0) then v285=v103[8 -6 ];v101[v285]=v101[v285]();break;end end end elseif (v104==84) then v48[v103[3]]=v101[v103[2]];else local v288=0;local v289;local v290;local v291;while true do if (v288==1) then v291=v101[v289 + 2 ];if (v291>0) then if (v290>v101[v289 + 1 ]) then v95=v103[3];else v101[v289 + 3 ]=v290;end elseif (v290<v101[v289 + 1 ]) then v95=v103[3];else v101[v289 + 3 ]=v290;end break;end if (v288==0) then v289=v103[2];v290=v101[v289];v288=1;end end end elseif (v104<=87) then if (v104==86) then if (v101[v103[2]]<v103[4]) then v95=v95 + 1 ;else v95=v103[3];end else local v292=v103[2 + 0 ];local v293,v294=v94(v101[v292](v21(v101,v292 + 1 ,v96)));v96=(v294 + v292) -1 ;local v295=0 -0 ;for v370=v292,v96 do local v371=0;while true do if (0==v371) then v295=v295 + 1 ;v101[v370]=v293[v295];break;end end end end elseif (v104==88) then v101[v103[2]]=v101[v103[3]]%v103[4] ;else do return;end end elseif (v104<=104) then if (v104<=96) then if (v104<=92) then if (v104<=90) then v101[v103[2]]=v101[v103[3]][v101[v103[4]]];elseif (v104>(323 -232)) then local v297=0;local v298;local v299;local v300;local v301;while true do if (v297==1) then v96=(v300 + v298) -1 ;v301=0;v297=2;end if (v297==2) then for v493=v298,v96 do v301=v301 + 1 ;v101[v493]=v299[v301];end break;end if (0==v297) then v298=v103[2];v299,v300=v94(v101[v298](v21(v101,v298 + 1 ,v103[3])));v297=1;end end else local v302=0;local v303;local v304;local v305;while true do if (v302==0) then v303=v92[v103[3]];v304=nil;v302=1;end if (v302==2) then for v496=1,v103[863 -(814 + 45) ] do local v497=0;local v498;while true do if (0==v497) then v95=v95 + 1 ;v498=v91[v95];v497=1;end if (v497==1) then if (v498[1]==18) then v305[v496-1 ]={v101,v498[1 + 2 ]};else v305[v496-1 ]={v48,v498[2 + 1 ]};end v100[ #v100 + 1 ]=v305;break;end end end v101[v103[2]]=v41(v303,v304,v49);break;end if (v302==1) then v305={};v304=v18({},{[v7("\24\203\95\25\35\241\78","\119\71\148\54")]=function(v499,v500)local v501=v305[v500];return v501[1][v501[2]];end,[v7("\103\233\43\44\200\230\86\210\32\49","\143\56\182\69\73\191")]=function(v502,v503,v504)local v505=v305[v503];v505[1][v505[2]]=v504;end});v302=2;end end end elseif (v104<=94) then if (v104>93) then local v306=0;local v307;local v308;local v309;local v310;while true do if (1==v306) then v96=(v309 + v307) -1 ;v310=0;v306=2;end if (v306==2) then for v507=v307,v96 do local v508=0;while true do if (0==v508) then v310=v310 + 1 ;v101[v507]=v308[v310];break;end end end break;end if (v306==0) then v307=v103[2];v308,v309=v94(v101[v307](v21(v101,v307 + (886 -(261 + 624)) ,v96)));v306=1;end end else local v311=v103[2];local v312=v103[4];local v313=v311 + 2 ;local v314={v101[v311](v101[v311 + 1 ],v101[v313])};for v372=1,v312 do v101[v313 + v372 ]=v314[v372];end local v315=v314[1];if v315 then v101[v313]=v315;v95=v103[3];else v95=v95 + 1 ;end end elseif (v104==95) then local v316=0;local v317;while true do if (v316==0) then v317=v103[2];do return v101[v317](v21(v101,v317 + 1 ,v103[3]));end break;end end else v101[v103[2]]=v103[3];end elseif (v104<=(177 -77)) then if (v104<=98) then if (v104==97) then local v320=0;local v321;local v322;while true do if (v320==0) then v321=v103[2];v322={};v320=1;end if (v320==1) then for v509=1, #v100 do local v510=0;local v511;while true do if (v510==0) then v511=v100[v509];for v541=0, #v511 do local v542=v511[v541];local v543=v542[1];local v544=v542[2];if ((v543==v101) and (v544>=v321)) then local v555=0;while true do if (v555==0) then v322[v544]=v543[v544];v542[1]=v322;break;end end end end break;end end end break;end end else v101[v103[2]]=v101[v103[3]]%v101[v103[1084 -(1020 + 60) ]] ;end elseif (v104==99) then local v324=0;local v325;local v326;local v327;while true do if (v324==1) then v327=0;for v512=v325,v103[13 -9 ] do local v513=0;while true do if (v513==0) then v327=v327 + 1 ;v101[v512]=v326[v327];break;end end end break;end if (v324==0) then v325=v103[2];v326={v101[v325](v21(v101,v325 + (1424 -(630 + 793)) ,v96))};v324=1;end end elseif (v101[v103[2]]<v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=102) then if (v104>101) then v95=v103[3];else v101[v103[2]]=v101[v103[3]] * v101[v103[18 -14 ]] ;end elseif (v104==103) then do return v101[v103[2]];end else local v330=0;local v331;while true do if (v330==0) then v331=v103[2];v101[v331]=v101[v331](v101[v331 + 1 + 0 ]);break;end end end elseif (v104<=112) then if (v104<=108) then if (v104<=106) then if (v104>105) then if (v101[v103[2]]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[9 -6 ];end elseif (v101[v103[2]]<v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==107) then v101[v103[2]]=v103[3];else local v334=v103[2];v101[v334]=v101[v334](v21(v101,v334 + 1 ,v103[3]));end elseif (v104<=110) then if (v104>109) then local v336=0;local v337;while true do if (v336==0) then v337=v103[2];v101[v337]=v101[v337](v21(v101,v337 + 1 ,v96));break;end end elseif (v101[v103[2]]~=v101[v103[4]]) then v95=v95 + (1748 -(760 + 987)) ;else v95=v103[3];end elseif (v104>111) then v101[v103[2]]={};elseif (v101[v103[2]]~=v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=116) then if (v104<=114) then if (v104>113) then local v339=v103[2];local v340={};for v375=1, #v100 do local v376=v100[v375];for v398=0, #v376 do local v399=0;local v400;local v401;local v402;while true do if (v399==0) then v400=v376[v398];v401=v400[1];v399=1;end if (v399==1) then v402=v400[2];if ((v401==v101) and (v402>=v339)) then local v540=0;while true do if (v540==0) then v340[v402]=v401[v402];v400[1]=v340;break;end end end break;end end end end elseif (v101[v103[2]]==v103[1917 -(1789 + 124) ]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>115) then v101[v103[2]]=v101[v103[3]][v103[4]];elseif v101[v103[2]] then v95=v95 + 1 ;else v95=v103[769 -(745 + 21) ];end elseif (v104<=118) then if (v104>117) then local v343=0;local v344;while true do if (v343==0) then v344=v103[2];v101[v344](v101[v344 + 1 ]);break;end end elseif (v101[v103[2]]~=v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>119) then v101[v103[2]]=v48[v103[3]];else v101[v103[2]][v103[3]]=v103[4];end v95=v95 + 1 ;end end;end if (0==v50) then v51=v47[1];v52=v47[2];v50=1;end end end return v41(v40(),{},v28)(...);end if (v29==4) then function v36()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==1) then v57=932 -(857 + 74) ;v58=(v32(v56,1,20) * (2^32)) + v55 ;v54=2;end if (v54==2) then v59=v32(v56,21,31);v60=((v32(v56,32)==1) and  -(569 -(367 + 201))) or 1 ;v54=3;end if (v54==3) then if (v59==0) then if (v58==0) then return v60 * 0 ;else local v123=0;while true do if (v123==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^(979 -(214 + 713))))) ;end if (0==v54) then v55=v35();v56=v35();v54=1;end end end v37=nil;function v37(v61)local v62=0;local v63;local v64;while true do if (v62==2) then v64={};for v105=1, #v63 do v64[v105]=v10(v9(v11(v63,v105,v105)));end v62=3;end if (v62==1) then v63=v11(v27,v30,(v30 + v61) -(1 + 0) );v30=v30 + v61 ;v62=2;end if (v62==3) then return v14(v64);end if (v62==0) then v63=nil;if  not v61 then v61=v35();if (v61==0) then return "";end end v62=1;end end end v29=5;end if (v29==1) then v32=nil;function v32(v65,v66,v67)if v67 then local v81=(v65/((5 -3)^(v66-1)))%(2^(((v67-1) -(v66-(2 -1))) + 1)) ;return v81-(v81%1) ;else local v82=0;local v83;while true do if (v82==0) then v83=(3 -1)^(v66-1) ;return (((v65%(v83 + v83))>=v83) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v68=0;local v69;local v70;local v71;local v72;while true do if (0==v68) then v69,v70,v71,v72=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v68=1;end if (v68==1) then return (v72 * (16777835 -(555 + 64))) + (v71 * 65536) + (v70 * 256) + v69 ;end end end v36=nil;v29=4;end if (6==v29) then v40=nil;function v40()local v73=0;local v74;local v75;local v76;local v77;local v78;local v79;while true do if (v73==2) then for v107=1,v78 do local v108=0;local v109;local v110;while true do if (v108==0) then v109=v33();v110=nil;v108=1;end if (v108==1) then if (v109==1) then v110=v33()~=0 ;elseif (v109==2) then v110=v36();elseif (v109==3) then v110=v37();end v79[v107]=v110;break;end end end v77[3]=v33();for v111=1,v35() do local v112=0;local v113;while true do if (v112==0) then v113=v33();if (v32(v113,1,1)==0) then local v127=0;local v128;local v129;local v130;while true do if (v127==0) then v128=v32(v113,2,3);v129=v32(v113,4,6);v127=1;end if (v127==3) then if (v32(v129,3,1068 -(68 + 997) )==1) then v130[4]=v79[v130[4]];end v74[v111]=v130;break;end if (v127==1) then v130={v34(),v34(),nil,nil};if (v128==0) then v130[3]=v34();v130[1 + 3 ]=v34();elseif (v128==1) then v130[880 -(282 + 595) ]=v35();elseif (v128==2) then v130[3]=v35() -(2^16) ;elseif (v128==3) then local v377=0;while true do if (0==v377) then v130[3]=v35() -((1639 -(1523 + 114))^16) ;v130[4]=v34();break;end end end v127=2;end if (v127==2) then if (v32(v129,1,1)==1) then v130[2 + 0 ]=v79[v130[2]];end if (v32(v129,2 -0 ,2)==1) then v130[3]=v79[v130[3]];end v127=3;end end end break;end end end v73=3;end if (v73==3) then for v114=1271 -(226 + 1044) ,v35() do v75[v114-1 ]=v40();end return v77;end if (v73==1) then v77={v74,v75,nil,v76};v78=v35();v79={};v73=2;end if (v73==0) then v74={};v75={};v76={};v73=1;end end end v41=nil;v29=7;end if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\177\7","\225\159\41\162\162\75\114"),function(v80)if (v9(v80,2)==79) then local v84=0;while true do if (v84==0) then v31=v8(v11(v80,1,1));return "";end end else local v85=0;local v86;while true do if (v85==0) then v86=v10(v8(v80,16));if v31 then local v125=0;local v126;while true do if (v125==0) then v126=v13(v86,v31);v31=nil;v125=1;end if (v125==1) then return v126;end end else return v86;end break;end end end end);v29=1;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

